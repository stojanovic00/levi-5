{
	"info": {
		"_postman_id": "5c7f16bd-95dd-476d-a134-e4b845b83c42",
		"name": "5DanaUOblacima2024 Private",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38299585",
		"_collection_link": "https://conference-app.postman.co/workspace/Conference-app~81edd2a2-acb0-42ab-8837-071ed27e9add/collection/38299585-5c7f16bd-95dd-476d-a134-e4b845b83c42?action=share&source=collection_link&creator=38299585"
	},
	"item": [
		{
			"name": "Player",
			"item": [
				{
					"name": "Positives",
					"item": [
						{
							"name": "Create player 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player1\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player1Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player1Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player1\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player1Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player1Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player2\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player2Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player2Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player2\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player2Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player2Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player3\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player3Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player3\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player3Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player3\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player3Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player3Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player4\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player4Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player4Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player4\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player4Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player4Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player5\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player5Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player5\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player5Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player5\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player5Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player5Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player6\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player6Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player6\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player6Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player6\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player6Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player6Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player7\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player7Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player7\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player7Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player7\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player7Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player7Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player8\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player8Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player8Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player8\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player8Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player8Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player9\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player9Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player9\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player9Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player9\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player9Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player9Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player10\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player10Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player10\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player10Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player10\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player10Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player10Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player11\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player11Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player11\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player11Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player11\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player11Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player11Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 12",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player12\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player12Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 12",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player12Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player12\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player12Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player12Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 13",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player13\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player13Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player13\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 13",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player13Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player13\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player13Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player13Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 14",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player14\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player14Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player14\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 14",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player14Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player14\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player14Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player14Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player15\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});",
											"",
											"pm.environment.set(\"player15Id\", jsonData.id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player15\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player15Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player15\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(0);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(0);",
											"    pm.expect(jsonData.teamId === null || jsonData.team === null).to.be.true;",
											"    pm.expect(jsonData.ratingAdjustment).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player15Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player15Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "FindAll",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(15); ",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Negatives",
					"item": [
						{
							"name": "Create player existinig name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nickname\": \"Player1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create player no name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/players/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{$guid}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{$guid}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Team",
			"item": [
				{
					"name": "Positives",
					"item": [
						{
							"name": "Create Team1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.teamName).to.be.equal(\"team1\");",
											"    actualNumberOfProperties = Object.keys(jsonData.players).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(5); ",
											"});",
											"",
											"pm.environment.set(\"team1ID\", jsonData.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team1\",\n    \"players\" : [\n        \"{{player1Id}}\",\n        \"{{player2Id}}\",\n        \"{{player3Id}}\",\n        \"{{player4Id}}\",\n        \"{{player5Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Team1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.teamName).to.be.equal(\"team1\");",
											"    actualNumberOfProperties = Object.keys(jsonData.players).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(5); ",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/teams/{{team1ID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams",
										"{{team1ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.teamName).to.be.equal(\"team2\");",
											"    actualNumberOfProperties = Object.keys(jsonData.players).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(5); ",
											"});",
											"",
											"pm.environment.set(\"team2ID\", jsonData.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team2\",\n    \"players\" : [\n        \"{{player6Id}}\",\n        \"{{player7Id}}\",\n        \"{{player8Id}}\",\n        \"{{player9Id}}\",\n        \"{{player10Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Team2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.teamName).to.be.equal(\"team2\");",
											"    actualNumberOfProperties = Object.keys(jsonData.players).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(5); ",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/teams/{{team2ID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams",
										"{{team2ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.teamName).to.be.equal(\"team3\");",
											"    actualNumberOfProperties = Object.keys(jsonData.players).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(5); ",
											"});",
											"",
											"pm.environment.set(\"team3ID\", jsonData.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team3\",\n    \"players\" : [\n        \"{{player11Id}}\",\n        \"{{player12Id}}\",\n        \"{{player13Id}}\",\n        \"{{player14Id}}\",\n        \"{{player15Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Team3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData.teamName).to.be.equal(\"team3\");",
											"    actualNumberOfProperties = Object.keys(jsonData.players).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(5); ",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/teams/{{team3ID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams",
										"{{team3ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Negatives",
					"item": [
						{
							"name": "Create Team empty body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team no name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"players\" : [\n        \"{{player1Id}}\",\n        \"{{player2Id}}\",\n        \"{{player3Id}}\",\n        \"{{player4Id}}\",\n        \"{{player5Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team no players",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team existing name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team1\",\n    \"players\" : [\n        \"{{player1Id}}\",\n        \"{{player2Id}}\",\n        \"{{player3Id}}\",\n        \"{{player4Id}}\",\n        \"{{player5Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team with used players",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team3\",\n    \"players\" : [\n        \"{{player1Id}}\",\n        \"{{player2Id}}\",\n        \"{{player3Id}}\",\n        \"{{player4Id}}\",\n        \"{{player5Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team 4 players",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team1\",\n    \"players\" : [\n        \"{{player1Id}}\",\n        \"{{player2Id}}\",\n        \"{{player3Id}}\",\n        \"{{player4Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team 6 players",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team1\",\n    \"players\" : [\n        \"{{player1Id}}\",\n        \"{{player2Id}}\",\n        \"{{player3Id}}\",\n        \"{{player4Id}}\",\n        \"{{player5Id}}\",\n        \"{{player6Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team same player Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team1\",\n    \"players\" : [\n        \"{{player1Id}}\",\n        \"{{player1Id}}\",\n        \"{{player3Id}}\",\n        \"{{player4Id}}\",\n        \"{{player5Id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Team not existing player Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\" : \"team1\",\n    \"players\" : [\n        \"{{player1Id}}\",\n        \"{{player1Id}}\",\n        \"{{player3Id}}\",\n        \"{{player4Id}}\",\n        \"{{$guid}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teams",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Team not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/teams/{{$guid}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teams",
										"{{$guid}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Match",
			"item": [
				{
					"name": "Negatives",
					"item": [
						{
							"name": "Record Match empty body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Record Match missing tim1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team2Id\" : \"{{team2ID}}\",\n    \"winningTeamId\" : \"{{team1ID}}\",\n    \"duration\" : 60\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Record Match missing tim2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"winningTeamId\" : \"{{team1ID}}\",\n    \"duration\" : 60\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Record Match missing duration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team2ID}}\",\n    \"winningTeamId\" : \"{{team1ID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Record Match same teamId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team1ID}}\",\n    \"winningTeamId\" : \"{{team1ID}}\",\n    \"duration\" : 60\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Record Match winner not in the match",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).not.to.be.within(200, 299);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team2ID}}\",\n    \"winningTeamId\" : \"{{team3ID}}\",\n    \"duration\" : 60\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "game1 t1-t2 -> 1",
					"item": [
						{
							"name": "Record Match team1 win",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team2ID}}\",\n    \"winningTeamId\" : \"{{team1ID}}\",\n    \"duration\" : 60\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player1Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player1\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player1Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player1Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player2Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player2\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player2Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player2Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player3Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player3\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player3Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player3Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player4Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player4\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player4Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player4Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player5Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player5\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player5Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player5Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player6Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player6\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(-25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player6Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player6Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player7Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player7\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(-25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player7Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player7Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player8Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player8\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(-25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player8Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player8Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player9Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player9\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(-25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player9Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player9Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player10Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player10\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(-25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(60);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player10Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player10Id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "game2 t1-t2 -> 1",
					"item": [
						{
							"name": "Record Match team1 win",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team2ID}}\",\n    \"winningTeamId\" : \"{{team1ID}}\",\n    \"duration\" : 440\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player1Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player1\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player1Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player1Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player2Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player2\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player2Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player2Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player3Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player3\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player3Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player3Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player4Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player4\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player4Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player4Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player5Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player5\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player5Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player5Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player6Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player6\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player6Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player6Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player7Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player7\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player7Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player7Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player8Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player8\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player8Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player8Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player9Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player9\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player9Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player9Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player10Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player10\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-42);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player10Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player10Id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "game3 t1-t2 -> X",
					"item": [
						{
							"name": "Record Match draw",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team2ID}}\",\n    \"duration\" : 500\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player1Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player1\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player1Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player1Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player2Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player2\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player2Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player2Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player3Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player3\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player3Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player3Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player4Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player4\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player4Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player4Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player5Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player5\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player5Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player5Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player6Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player6\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player6Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player6Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player7Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player7\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player7Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player7Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player8Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player8\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player8Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player8Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player9Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player9\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player9Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player9Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player10Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player10\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-38);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(1000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(30);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player10Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player10Id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "game4 t1-t2 -> 2",
					"item": [
						{
							"name": "Record Match team2 win",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team2ID}}\",\n    \"winningTeamId\" : \"{{team2ID}}\",\n    \"duration\" : 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player1Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player1\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player1Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player1Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player2Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player2\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player2Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player2Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player3Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player3\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player3Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player3Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player4Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player4\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player4Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player4Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player5Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player5\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player5Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player5Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player6Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player6\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player6Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player6Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player7Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player7\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player7Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player7Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player8Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player8\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player8Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player8Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player9Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player9\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player9Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player9Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player10Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player10\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(-26);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player10Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player10Id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "game5 t1-t3 -> X",
					"item": [
						{
							"name": "Record Match draw",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team3ID}}\",\n    \"duration\" : 100\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player1Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player1\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player1Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player1Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player2Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player2\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player2Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player2Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player3Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player3\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player3Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player3Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player4Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player4\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player4Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player4Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player5Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player5\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(1);",
											"    pm.expect(jsonData.elo).to.be.equal(25);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player5Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player5Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player11Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player11\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(2);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player11Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player11Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 12",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player12Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player12\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(2);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player12Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player12Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 13",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player13Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player13\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(2);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player13Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player13Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 14",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player14Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player14\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(2);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player14Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player14Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player15Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player15\");",
											"    pm.expect(jsonData.wins).to.be.equal(0);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(2);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(100);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(50);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player15Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player15Id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "game6 t2-t3 -> 2",
					"item": [
						{
							"name": "Record Match team3 win",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team2ID}}\",\n    \"team2Id\" : \"{{team3ID}}\",\n    \"winningTeamId\" : \"{{team3ID}}\",\n    \"duration\" : 400\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player6Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player6\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-35);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3400);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player6Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player6Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player7Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player7\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-35);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3400);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player7Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player7Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player8Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player8\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-35);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3400);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player8Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player8Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player9Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player9\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-35);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3400);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player9Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player9Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player10Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player10\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-35);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(3400);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player10Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player10Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player11Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player11\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(20);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player11Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player11Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 12",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player12Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player12\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(20);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player12Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player12Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 13",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player13Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player13\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(20);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player13Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player13Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 14",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player14Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player14\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(20);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player14Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player14Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player15Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player15\");",
											"    pm.expect(jsonData.wins).to.be.equal(1);",
											"    pm.expect(jsonData.losses).to.be.equal(0);",
											"    pm.expect(jsonData.elo).to.be.equal(20);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(500);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team3ID\") || jsonData.team == pm.environment.get(\"team3ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(40);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player15Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player15Id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "game7 t1-t2 -> 2",
					"item": [
						{
							"name": "Record Match team1 win",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"team1Id\" : \"{{team1ID}}\",\n    \"team2Id\" : \"{{team2ID}}\",\n    \"winningTeamId\" : \"{{team2ID}}\",\n    \"duration\" : 1600\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/matches",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"matches"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player1Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player1\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(13);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(4700);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player1Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player1Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player2Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player2\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(13);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(4700);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player2Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player2Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player3Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player3\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(13);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(4700);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player3Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player3Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player4Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player4\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(13);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(4700);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player4Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player4Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player5Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player5\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(2);",
											"    pm.expect(jsonData.elo).to.be.equal(13);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(4700);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team1ID\") || jsonData.team == pm.environment.get(\"team1ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(20);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player5Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player5Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player6Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player6\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-29);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(5000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(10);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player6Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player6Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player7Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player7\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-29);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(5000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(10);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player7Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player7Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player8Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player8\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-29);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(5000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(10);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player8Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player8Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player9Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player9\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-29);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(5000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(10);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player9Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player9Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get player 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check result counts\", function () {",
											"    actualNumberOfProperties = Object.keys(jsonData).length;",
											"    pm.expect(actualNumberOfProperties).to.equal(8); ",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"player10Id\"));",
											"    pm.expect(jsonData.nickname).to.be.equal(\"Player10\");",
											"    pm.expect(jsonData.wins).to.be.equal(2);",
											"    pm.expect(jsonData.losses).to.be.equal(3);",
											"    pm.expect(jsonData.elo).to.be.equal(-29);",
											"    pm.expect(jsonData.hoursPlayed).to.be.equal(5000);",
											"    pm.expect(jsonData.teamId == pm.environment.get(\"team2ID\") || jsonData.team == pm.environment.get(\"team2ID\")).to.be.true",
											"    pm.expect(jsonData.ratingAdjustment).to.be.equal(10);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/players/{{player10Id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"players",
										"{{player10Id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}